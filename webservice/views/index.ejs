<!DOCTYPE html>
<html>
  <head>
    <title>td-ls</title>
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <link rel='stylesheet' href='/stylesheets/style.css' />
		<link href="https://fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet">
		<style>
			body {
				max-width: 1024px;	
				margin: auto;
				font-family: 'Open Sans', sans-serif;
			}
			.header {
				padding-left: 1rem;	
			}
			.container {
				padding-left: 1rem;	
			}
			.code-block {
				display: inline-block;
				width: 96%;
				margin: 1% 0;
				padding: 0 1%;	
				background: rgba(250,250,250, 0.5);	
			}
			.gblue {
				color: #4285F4;
			}
			.ggreen {
				color: #34A853;	
			}
			.gorange {
				color: #FBBC05;	
			}
			.gred {
				color: #EA4335;	
			}
		</style>
  </head>
  <body>

		<%- include nav.ejs %>

		<div style='height: 20px'></div>

		<div class='container'>

			<div>
				<b>Latest Contributions</b>, <code><a href='/logs'>showAll(logs)</a></code><br>
				<div class='code-block'>
					<code>
						<% for (let i = 0 ; i < (logs.length > 10 ? 10 : logs.length); i++) { %>
							- <b><%= logs[i].title %></b>
								by { <b><a class='ggreen' href='/users/blog/<%= logs[i].User.nickName %>'><%= logs[i].User.nickName %></a></b> }, written at { <b><%= logs[i].createdAt.toUTCString().split('GMT')[0].split(',')[1].trim() %></b> }, <a href='/logs/<%= logs[i].id %>'>show(<span>#<%= logs[i].id %></span>)</a><br>
						<% } %>
					</code>
				</div>
			</div>

			<div style='height:20px;'></div>

			<div>
				<b>Members</b>, <code><a href='/users'>showAll(users)</a></code> <br>
				<div class='code-block'>
					<code>
						<% for (let i = 0 ; i < (users.length > 5 ? 5 : users.length); i++) { %>
							- <b><%= users[i].nickName %></b> 
								{	
									<%= users[i].email %>, 
									<% if ( i == 0 ) { %>
										<a href='/users/blog/<%= users[i].nickName %>' class='gred'>goto(<b><%= users[i].nickName %></b>'s blog)</a>
									<% } else { %>
										<a href='/users/blog/<%= users[i].nickName %>'>goto(<b><%= users[i].nickName %></b>'s blog)</a>
									<% } %>
								} <br>
						<% } %>
					</code>
				</div>
			</div>

			<div style='height:20px;'></div>

			<div>
				<b>Identity of { <span class='ggreen'>tdls</span> }</b><br>
				<div class='code-block'>
					<code>
						Connect all the technologies in the world.
					</code>
				</div>
			</div>

			<div style='height:20px;'></div>

			<div>
				<b>Setting</b><br>
				<div class='code-block'>
					<code>
						<span class='gred'>* Prerequisite: node 8 +</span> <br>
						<span class='gorange'>** 주기적으로 git pull origin master를 해주시면 새로운 기능을 사용하실 수 있습니다:)</span> <br>
						<span class='ggreen'># multi-user environment & using global node</span> <br>
						git clone https://github.com/songjein/tdls <br>
						cd tdls ; npm i <br>
						echo 'export PATH=$PATH:<PATH-TO-tdls;절대경로>/cmd' >> ~/.bashrc <br>
						source ~/.bashrc <br>
						<span class='ggreen'># single-user environment</span> <br>
						git clone https://github.com/songjein/tdls<br>
						cd tdls; sudo npm i -g<br>
					</code>
				</div>
			</div>
			<div>
				<b>Register</b><br>
				<div class='code-block'>
					<code>
						<span class='gred'>* 사용하시는 시스템에 키페어를 발급받고 유저정보를 세팅할 수 있습니다</span><br>
						<span class='gorange'>** 이후의 td push/pull, td log 기능을 위해 필수과정입니다.</span><br>
						<span class='gorange'>** setinfo의 횟수 제한은 없습니다. nickName의 경우 유니크하다면 무한 수정이 가능합니다:)</span><br>
						td keygen <br>
						td setinfo
					</code>
				</div>
			</div>
			<div>
				<b>Blogging</b><br>
				<div class='code-block'>
					<code> 
						<span class='gred'>* md 파일의 첫 번째 줄은 제목으로 간주됩니다.</span><br>
						<span class='gorange'>** ipynb를 md로 변형하신 경우엔 첫째줄에 #제목을 추가해주세요!</span><br>
						<span class='ggreen'># create</span> <br>
						td log -f 'MarkDown file path(absolute or relative path)' </br>
						<span class='ggreen'># update</span> <br>
						<span class='ggreen'>#https://tdls.dev/logs/<b>:log_id</b></span><br>
						td log -f 'PATH' -i update_log_id </br> 
						<span class='ggreen'># delete</span> <br>
						td log -d -i delete_log_id<br> 
					</code>
				</div>
			</div>
			<div>
				<b>Todo-list</b><br>
				<div class='code-block'>
					<code> 
						<span class='gred'>* td 명령어를 사용하여 메모할 수 있습니다.</span><br>
						<span class='gorange'>** push를 통해 개인 페이지에 백업 및 표시가 가능합니다:)</span><br>
						<span class='ggreen'># create</span> <br>
						td add -m 'schedule or memo...' <br>
						<span class='ggreen'># list</span> <br>
						td ls <br>
						<span class='ggreen'># finish todo item</span> <br>
						td fin -i index_of_todo_item <br>
						<span class='ggreen'># list finished items</span> <br>
						td lsf <br>
						<span class='ggreen'># delete item </span><br>
						td rm -i index_of_todo_item <br>
						<span class='ggreen'># change order</span> <br>
						td co -1 first_index -2 second_index<br>
					</code>
				</div>
			</div>

			<div>
				<b style='color:orange'>In development...</b><br>
				<div class='code-block'>
					<code> 
						- 사이트 컨셉 -> 코딩 <a href='https://tdls.dev/users/master'>tdls.dev/user/master</a> 참고 <br>
						- 현재 로컬에서만 가능한 td push & pull 기능 (tdls.dev에 기록&백업)<br>
						- 유저의 td fin 명령에 대한 캘린더(빨래판) 그리기 <br>
						- team-todo-list를 가능케 하는 channel 생성 기능 <br>
						- graph-based blog, 블로그 글끼리 링크 가능, 트리를 이용한 상호 관계 시각화 <br>
						- 웹페이지 댓글 및 채팅 기능 + 콘솔 상에서 채팅도? <br>
						- 유저가 td add 시 -s(secret) 옵션 명시할 경우 클라이언트 단에서 암/복호화</br>
						- todo-item 생성시 태그(대분류; ex.캐글, 수학공부) 포함, 조회시 그루핑 기능 <br>
						- 페이지네이션<br>
						- 이스터에그<br>
					</code>
				</div>
			</div>

		</div>
		<!-- container -->
  </body>
</html>
